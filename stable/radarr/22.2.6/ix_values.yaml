exportarrImage:
  pullPolicy: IfNotPresent
  repository: ghcr.io/onedr0p/exportarr
  tag: v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
image:
  pullPolicy: IfNotPresent
  repository: ghcr.io/onedr0p/radarr
  tag: 5.8.3.8933
metrics:
  main:
    enabled: true
    endpoints:
    - path: /metrics
      port: metrics
    prometheusRule:
      enabled: false
    targetSelector: metrics
    type: servicemonitor
persistence:
  config:
    enabled: true
    targetSelector:
      exportarr:
        exportarr:
          mountPath: /config
          readOnly: true
      main:
        main:
          mountPath: /config
portal:
  open:
    enabled: true
securityContext:
  container:
    readOnlyRootFilesystem: false
service:
  main:
    ports:
      main:
        port: 7878
  metrics:
    enabled: true
    ports:
      metrics:
        enabled: true
        port: 7879
        targetSelector: exportarr
    targetSelector: exportarr
    type: ClusterIP
updated: true
workload:
  exportarr:
    enabled: true
    podSpec:
      containers:
        exportarr:
          args:
          - radarr
          enabled: true
          env:
            CONFIG: /config/config.xml
            INTERFACE: 0.0.0.0
            PORT: '{{ .Values.service.metrics.ports.metrics.port }}'
            URL: '{{ printf "http://%v:%v" (include "tc.v1.common.lib.chart.names.fullname"
              $) .Values.service.main.ports.main.port }}'
          imageSelector: exportarrImage
          primary: true
          probes:
            liveness:
              enabled: true
              path: /healthz
              port: '{{ .Values.service.metrics.ports.metrics.port }}'
              type: http
            readiness:
              enabled: true
              path: /healthz
              port: '{{ .Values.service.metrics.ports.metrics.port }}'
              type: http
            startup:
              enabled: true
              path: /healthz
              port: '{{ .Values.service.metrics.ports.metrics.port }}'
              type: http
    replicas: 1
    strategy: RollingUpdate
    type: Deployment
  main:
    podSpec:
      containers:
        main:
          env:
            RADARR__PORT: '{{ .Values.service.main.ports.main.port }}'
          probes:
            liveness:
              enabled: true
              path: /ping
              type: http
            readiness:
              enabled: true
              path: /ping
              type: http
            startup:
              enabled: true
              path: /ping
              type: http
